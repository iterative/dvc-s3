name: Benchmarks

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
    inputs:
      dataset:
        description: "Dataset Size"
        required: false
        default: "small"
        type: choice
        options:
          - tiny
          - small
          - large
          - mnist

env:
  DVC_TEST: "true"
  FORCE_COLOR: "1"
  DATASET: ${{ github.event.inputs.dataset || ( github.event_name == 'schedule' && 'mnist' || 'small' ) }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  bench:
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        pyv: ["3.12"]

    steps:
    - uses: iterative/setup-cml@v3
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: dvc-s3

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: iterative/dvc
        path: dvc

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: iterative/dvc-bench
        path: dvc-bench

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyv }}
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml
          dvc/pyproject.toml

    - name: install
      run: pip install -e "./dvc[testing]" -e "./dvc-s3[tests]"

    - name: run benchmarks
      timeout-minutes: 180
      working-directory: dvc-s3/
      run: >
        pytest --benchmark-save benchmarks-s3 --benchmark-group-by func
        dvc_s3/tests/benchmarks.py
        --dvc-revs main,3.10.0,2.58.2
        --dataset ${DATASET}
        --dvc-install-deps s3
        --dvc-bench-repo ../dvc-bench --dvc-repo ../dvc

    - name: upload raw results
      uses: actions/upload-artifact@v4
      with:
        name: .benchmarks
        path: dvc-s3/.benchmarks

    - name: create md
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'pull_request' && ! github.event.pull_request.head.repo.fork }}
      run: |
        echo '```' > report.md
        PY_COLORS=0 pytest-benchmark compare --group-by func --sort name >> report.md
        echo '```' >> report.md
        cml comment create report.md
      working-directory: dvc-s3
